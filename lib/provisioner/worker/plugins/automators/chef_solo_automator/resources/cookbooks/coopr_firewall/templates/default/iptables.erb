# This file was generated by Chef for <%= node['fqdn'] =%>

###
## Disable IP connection tracking
###

*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
<% if node['coopr_firewall']['notrack_ports'] %>
# NOTRACK ports
<% node['coopr_firewall']['notrack_ports'].sort.each do |p| %>
-A PREROUTING -p tcp --dport <%= p =%> -j NOTRACK
-A OUTPUT -p tcp --sport <%= p =%> -j NOTRACK
-A OUTPUT -p tcp --dport <%= p =%> -j NOTRACK
-A PREROUTING -p udp --dport <%= p =%> -j NOTRACK
-A OUTPUT -p udp --sport <%= p =%> -j NOTRACK
-A OUTPUT -p udp --dport <%= p =%> -j NOTRACK
<% end %>
<% end %>
COMMIT

*filter
<% unless node['coopr_firewall']['no_flush'] %>

###
## Flush filter tables
###

-F INPUT
-F FORWARD
-F OUTPUT

<% end %>
###
## Set defaults
###

# node['coopr_firewall']['INPUT_policy']
<% if node['coopr_firewall']['INPUT_policy'] %>
:INPUT <%= node['coopr_firewall']['INPUT_policy'] =%> [0:0]
<% end %>
<% if node['coopr_firewall']['FORWARD_policy'] %>
:FORWARD <%= node['coopr_firewall']['FORWARD_policy'] =%> [0:0]
<% end %>
<% if node['coopr_firewall']['OUTPUT_policy'] %>
:OUTPUT <%= node['coopr_firewall']['OUTPUT_policy'] =%> [0:0]
<% end %>

# Allow traffic that is a part of an ongoing connection
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

###
## Services open to the outside world
###

# Allow certain flavours of ICMP (11 for traceroute, 0 & 8 for ping)
-A INPUT -p icmp --icmp-type 11 -j ACCEPT
-A INPUT -p icmp --icmp-type 8  -j ACCEPT
-A INPUT -p icmp --icmp-type 0  -j ACCEPT

<% if node['coopr_firewall']['open_tcp_ports'] %>
# Open TCP ports
<% node['coopr_firewall']['open_tcp_ports'].sort.each do |p| %>
-A INPUT -p tcp --dport <%= p =%> -j ACCEPT
<% end %>
<% end %>

<% if node['coopr_firewall']['open_udp_ports'] %>
# Open UDP ports
<% node['coopr_firewall']['open_udp_ports'].sort.each do |p| %>
-A INPUT -p udp --dport <%= p =%> -j ACCEPT
-A INPUT -p udp --sport <%= p =%> -j ACCEPT
<% end %>
<% end %>

###
## Interfaces
###

# Allow all traffic from loopback
-A INPUT -i lo -j ACCEPT 
<% node['network']['interfaces'].sort.each do |n, v| %>
# Allow all traffic from Docker interfaces
<% if v.key?('type') && v['type'] == 'docker' %>
-A INPUT -i <%= n =%> -j ACCEPT
<% end %>
<% end %>

###
## Nodes
###

# This cluster (automatic)
<% node['coopr']['cluster']['nodes'].each do |n, v| %>
-A INPUT -s <%= v['ipaddresses']['access_v4'] =%> -j ACCEPT
<% next if v['ipaddresses']['bind_v4'] == v['ipaddresses']['access_v4'] %>
-A INPUT -s <%= v['ipaddresses']['bind_v4'] =%> -j ACCEPT
<% end %>

<% if node['coopr_firewall']['whitelist_nodes'] %>
# Whitelisted nodes
<% node['coopr_firewall']['whitelist_nodes'].sort.each do |n| %>
-A INPUT -s <%= n =%> -j ACCEPT
<% end %>

<% end %>
<% if node['coopr_firewall']['blacklist_nodes'] %>
# Blacklisted nodes
<% node['coopr_firewall']['blacklist_nodes'].sort.each do |n| %>
-A INPUT -s <%= n =%> -j DROP
<% end %>

<% end %>

# Enable SSH to the world
-A INPUT -p tcp --dport 22 -j ACCEPT

####
## END RULES
####

COMMIT
